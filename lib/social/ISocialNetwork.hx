package social;

/**
 * API Интерфейс социальной сети.
 * 
 * Суть этого интерфейса в том, чтобы инкапсулировать и абстрагировать
 * параметры и методы различных соц. сетей, на сколько это возможно.
 * Это позволяет упростить работу и интеграцию с ними.
 * 
 * Библиотека может работать как в браузере, так и в серверном NodeJS.
 * Однако реализация некоторых методов может быть доступна только для
 * какой-то конкретной цели, смотрите описание методов.
 */
interface ISocialNetwork 
{
    //////////////////
    //   СВОЙСТВА   //
    //////////////////

    /**
     * Версия библиотеки.
     * 
     * Семантическое версианирование в формате: `major.minor.path`
     * Пример: `1.2.3`
     * 
     * Не может быть `null`
     */
    var version(default, null):String;

    /**
     * Тип социальной сети.
     * 
     * Не может быть `null`
     */
    var type(default, null):SocialNetworkType;

    /**
     * Название социальной сети.
     * 
     * Не может быть `null`
     */
    var title(default, null):String;

    /**
     * Статус инициализации.
     * 
     * Равен `true`, если этот интерфейс API был проинициализирован.
     * 
     * Не может быть `null`
     */
    var isInit(default, null):Bool;

    /**
     * ID Приложения.
     * 
     * Это уникальный идентификатор данного приложения в социальной сети.
     * 
     * По умолчанию: `null`
     */
    var appID:String;

    /**
     * Секретный ключ приложения.
     * 
     * Может быть необходим для проверки авторизации.
     * Этот ключ выдаётся приложению социальной сетью и используется приложением на серверной стороне.
     * 
     * По умолчанию: `null`
     */
    var secretKey:String;

    /**
     * Сервисный ключ доступа.
     * 
     * Некоторые методы API социальной сети могут требовать этот ключ.
     * Этот ключ выдаётся приложению социальной сетью и используется на серверной стороне.
     * 
     * По умолчанию: `null`
     */
    var serviceKey:String;



    ////////////////
    //   МЕТОДЫ   //
    ////////////////

    /**
     * Инициализировать интерфейс.
     * 
     * Для некоторых методов может быть необходима предварительная инициализация интерфейса.
     * @param options Параметры инициализации.
     * @param callback Калбек завершения.
     */
    function init(options:InitParams, callback:SocialError->Void):Void;
}

/**
 * Параметры для инициализации социальной сети.
 */
typedef InitParams =
{
    
}