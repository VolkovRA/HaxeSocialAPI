package social.utils;

/**
 * Поддерживаемый функционал и его возможности.  
 * Объект содержит описание поддерживаемого функционала
 * под конкретную соц. сеть. Дело в том, что хоть интерфейс
 * и абстрагирует API социальной сети, тем не менее, он
 * **может** различаться в некоторых деталях. Этот объект
 * описывает все важные различия, которые могут быть полезны.
 * 
 * Вы не должны изменять эти значения, они служат для
 * дополнительной информации и более тесной интеграции с
 * социальной сетью, а так-же для оптимизации некоторых
 * запросов.
 */
typedef Capabilities =
{
    /**
     * Параметры поддержки приглашения друзей.  
     * Не может быть `null`
     */
    var invite:InviteCapabilities;

    /**
     * Параметры поддержки постинга.  
     * Не может быть `null`
     */
    var post:PostCapabilities;

    /**
     * Параметры поддержки уровней игроков.  
     * Не может быть `null`
     */
    var setLevel:SetLevelCapabilities;

    /**
     * Параметры поддержки очков игроков.  
     * Не может быть `null`
     */
    var setScores:SetScoresCapabilities;

    /**
     * Ограничение на количество одновременно запрашиваемых данных 
     * пользователей в одном запросе к социальной сети.
     * 
     * Используется при вызове метода: `getUsers()`. Библиотека SocialNetwork
     * автоматически дробит большие запросы на несколько, если в одном из них
     * количество запрошенных пользователей превысит это значение.
     * 
     * Значение `0` - ограничение отсутствует.
     * 
     * | Социальная сеть | Значение |
     * |:-|:-|
     * |ВКонтакте|`1000`|
     * |Одноклассники|`0`|
     * |Facebook|`0`|
     * 
     * Не может быть `null`
     */
    var getUsersMax:Int;
}

/**
 * Возможности приглашения друзей.
 */
typedef InviteCapabilities =
{
    /**
     * Флаг доступности функционала.  
     * - Если `true`, данная соц. сеть позволяет приглашать друзей в приложение.
     * - Если `false`, вызов этого метода генерирует исключение.
     * 
     * | Социальная сеть | Значение |
     * |:-|:-|
     * |ВКонтакте|`true`|
     * |Одноклассники|`true`|
     * |Facebook|`true`|
     * 
     * Не может быть `null`
     */
    var enabled:Bool;

    /**
     * Флаг доступности функционала - выбор пользователей для приглашения.  
     * - Если `true`, данная соц. сеть позволяет указать список приглашаемых
     *   в игру пользователей.
     * - Если `false`, передача списка пользователей не имеет эффекта в этой
     *   социальной сети.
     * 
     * | Социальная сеть | Значение |
     * |:-|:-|
     * |ВКонтакте|`false`|
     * |Одноклассники|`true`|
     * |Facebook|`true`|
     * 
     * Не может быть `null`
     */
    var users:Bool;

    /**
     * Флаг доступности функционала - отправляемое сообщение.   
     * - Если `true`, данная соц. сеть позволяет указать произвольное сообщение
     *   вместе с приглашением друзей в игру.
     * - Если `false`, передача сообщения не имеет эффекта в этой социальной сети.
     * 
     * | Социальная сеть | Значение |
     * |:-|:-|
     * |ВКонтакте|`false`|
     * |Одноклассники|`true`|
     * |Facebook|`true`|
     * 
     * Не может быть `null`
     */
    var message:Bool;

    /**
     * Флаг доступности функционала - результат приглашения, список приглашённых.  
     * - Если `true`, данная соц. сеть позволяет получить список друзей, которым игрок
     *   отправил приглашение в игру.
     * - Если `false`, социальная сеть не позволяет получить список приглашённых.
     * 
     * | Социальная сеть | Значение |
     * |:-|:-|
     * |ВКонтакте|`false`|
     * |Одноклассники|`true`|
     * |Facebook|`false`|
     * 
     * Не может быть `null`
     */
    var result:Bool;
}

/**
 * Возможности постинга.
 */
typedef PostCapabilities =
{
    /**
     * Флаг доступности функционала.  
     * - Если `true`, данная соц. сеть позволяет делать посты.
     * - Если `false`, вызов этого метода генерирует исключение.
     * 
     * | Социальная сеть | Значение |
     * |:-|:-|
     * |ВКонтакте|`true`|
     * |Одноклассники|`true`|
     * |Facebook|`true`|
     * 
     * Не может быть `null`
     */
    var enabled:Bool;
}

/**
 * Возможности установки достигнутого уровня игроком.
 */
typedef SetLevelCapabilities =
{
    /**
     * Флаг доступности функционала.  
     * - Если `true`, данная соц. сеть принимает информацию о достигнутом игроком уровне в игре.
     * - Если `false`, вызов этого метода генерирует исключение.
     * 
     * | Социальная сеть | Значение |
     * |:-|:-|
     * |ВКонтакте|`true`|
     * |Одноклассники|`false`|
     * |Facebook|`false`|
     * 
     * Не может быть `null`
     */
    var enabled:Bool;
}

/**
 * Возможности установки достигнутого прогресса игроком по очкам.
 */
typedef SetScoresCapabilities =
{
    /**
     * Флаг доступности функционала.  
     * - Если `true`, данная соц. сеть принимает информацию о достигнутом прогрессе игрока по очкам.
     * - Если `false`, вызов этого метода генерирует исключение.
     * 
     * | Социальная сеть | Значение |
     * |:-|:-|
     * |ВКонтакте|`true`|
     * |Одноклассники|`false`|
     * |Facebook|`false`|
     * 
     * Не может быть `null`
     */
    var enabled:Bool;
}